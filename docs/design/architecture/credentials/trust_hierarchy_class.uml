@startuml
skinparam shadowing false

title Trust and Configuration Hierarchy

skinparam class {
    BackgroundColor #lightblue
    ArrowColor #darkblue
    BorderColor black
}


hide members
skinparam groupInheritance 2
skinparam classFontSize 14



entity "Wallet Vendor" #lightgrey
note left: There will be many Wallet Vendors

class "Network Access Credential Registrar Key" <<ðŸ”‘>> {
  issues network access credentials with valid provisioning credentials
}
show "Network Access Credential Registrar Key" members

class "Wallet Provisioning Credential Registrar Key" <<ðŸ”‘>> {
  issues wallet provisioning credentials in a secured context
}
show "Wallet Provisioning Credential Registrar Key" members

class Wallet #lightgreen {
  + Wallet Provisioning Credential <<ðŸ”‘>>
  + Network Access Credential <<ðŸ”‘>>
  + Token Transfer Credential <<ðŸ”‘>>
  + Configuration Data
}
show Wallet members




entity "Briolette Operator" #lightgrey { }
note left: Wallets may work across many operators

class "Common Server State" #beige {
 + Network Access Credential Group Public Keys
 + Epoch Data Signing Public Key
 + Epoch Data
 + Service Policies
}
show "Common Server State" members

class "Client State (Epoch) Signing Key" <<ðŸ”‘>> {
}

class "Epoch Data" #beige {
  + Current System Epoch (time)
  + System-wide trusted public keys
  + Revocation data
}
show "Epoch Data" members

class "Token Signing Key (Mint)" <<ðŸ”‘>>

class "Transfer Ticket Signing Key" <<ðŸ”‘>> {
  signs tickets
}
show "Transfer Ticket Signing Key" members

class "Token Transfer Credential Registrar Key" <<ðŸ”‘>> {
  issues token transfer credentials with valid Network Access Credentials
}
show "Token Transfer Credential Registrar Key" members

class "Token" #beige {
 + Value
 + Transfer Ticket
 + Transfer Signature
 + ...
}
show Token members

class "Briolette Online Services" #lightgreen

"Briolette Operator" --|> "Common Server State"
"Common Server State" --|> "Network Access Credential Registrar Key"
"Common Server State" --|> "Briolette Online Services" : configures
"Briolette Operator" --|> "Client State (Epoch) Signing Key"
"Epoch Data" --|> "Client State (Epoch) Signing Key"
"Epoch Data" --|> "Token Signing Key (Mint)"
"Epoch Data" --|> "Transfer Ticket Signing Key"
"Transfer Ticket Signing Key" --|> "Token::Transfer Ticket"
"Epoch Data" --|> "Token Transfer Credential Registrar Key"
"Token Signing Key (Mint)" --|> "Token::Value" : signs
"Token Transfer Credential Registrar Key" --|> "Wallet::Token Transfer Credential"
"Client State (Epoch) Signing Key" --|> "Epoch Data"
"Epoch Data" --|> "Wallet::Configuration Data"


"Wallet Vendor" --|> "Wallet Provisioning Credential Registrar Key"
"Wallet Provisioning Credential Registrar Key" --|> "Wallet::Wallet Provisioning Credential"
"Wallet Vendor" --|> "Network Access Credential Registrar Key"
"Wallet Vendor" --|> "Wallet::Configuration Data"
"Wallet::Configuration Data" -[dotted]-|> "Token Signing Key (Mint)" : may trust out-of-system mints
"Network Access Credential Registrar Key" --|> "Wallet::Network Access Credential"
"Wallet::Network Access Credential" --|> "Briolette Online Services" : authenticates
"Wallet::Token Transfer Credential" --|> "Token::Transfer Signature" : creates

hide <<ðŸ”‘>> circle
hide class circle


legend 
    <size:18>Key</size>
    |<#lightgrey> Entities |
    |<#lightblue> Cryptographic Key (ðŸ”‘) |
    |<#beige> Data |
    |<#lightgreen> Software System(s) |
endlegend
@enduml
